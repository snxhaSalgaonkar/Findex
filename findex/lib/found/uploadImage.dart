import 'package:findex/found/confirmdesc.dart';
import 'package:flutter/material.dart';

class UploadImageScreen extends StatefulWidget {
  @override
  _UploadImageScreenState createState() => _UploadImageScreenState();
}

class _UploadImageScreenState extends State<UploadImageScreen> {
  String? _imagePath;
  String? _description;
  String? _selectedLostItemType; // To store the selected item type
  List<String> _lostItemTypes = [
    'Mobile',
    'Airpods',
    'Earring',
    'Bottle',
    'Wallet',
    'Keys',
    'Other',
  ];

  Future<void> _addImage() {
    print('Upload image ');
    // Implement image adding logic here
    // setState(() {
    //   _imagePath = 'assets/placeholder_image.png'; // Placeholder
    // });
  }

  Future<void> _askGeminiForDescription() async {
    if (_imagePath != null) {
      // Implement Gemini description request logic here
      setState(() {
        _description =
            'Description generated by Gemini will appear here.'; // Placeholder
      });
    }
  }

  void _editDescription() {
    // Implement edit description functionality here
    print('Edit description pressed');
  }

  void _submitApplication() {
    print('navigated to next page');
    Navigator.push(
      context,
      MaterialPageRoute(builder: (context) => Confirmdesc()),
    );

    // // Implement submit application logic here
    // if (_selectedLostItemType != null) {
    //   print('Submitting application for: $_selectedLostItemType');
    //   // Include _selectedLostItemType in your submission data
    // } else {
    //   ScaffoldMessenger.of(context).showSnackBar(
    //     SnackBar(content: Text('Please select the type of item lost.')),
    //   );
    // }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Colors.black,
        title: Text('Upload Image', style: TextStyle(color: Colors.white)),
      ),
      body: SingleChildScrollView(
        // Added SingleChildScrollView for better layout on smaller screens
        padding: EdgeInsets.all(16.0),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: <Widget>[
            // App Logo
            Center(
              child: Container(
                //alignment: Alignment.topRight,
                margin: EdgeInsets.only(bottom: 20.0),
                child: Container(
                  padding: EdgeInsets.all(8.0),
                  decoration: BoxDecoration(
                    color: Colors.white,
                    borderRadius: BorderRadius.circular(5.0),
                  ),
                  child: Text('App logo', style: TextStyle(fontSize: 16.0)),
                ),
              ),
            ),

            // Select Lost Item Type
            Container(
              padding: EdgeInsets.symmetric(horizontal: 12.0, vertical: 8.0),
              decoration: BoxDecoration(
                color: Colors.white,
                borderRadius: BorderRadius.circular(5.0),
              ),
              child: DropdownButton<String>(
                value: _selectedLostItemType,
                hint: Text('Select item type'),
                isExpanded: true,
                items:
                    _lostItemTypes.map((String value) {
                      return DropdownMenuItem<String>(
                        value: value,
                        child: Text(value),
                      );
                    }).toList(),
                onChanged: (String? newValue) {
                  setState(() {
                    _selectedLostItemType = newValue;
                  });
                  print('item Type selected $_selectedLostItemType');
                },
              ),
            ),
            SizedBox(height: 16.0),

            Container(
              height: 100,
              width: 100,
              child: ElevatedButton(
                onPressed: () {
                  _addImage();
                },
                child: Text("Upload image"),
              ),
            ),

            // Add receipt / item image
            // GestureDetector(
            //   onTap: _addImage,
            //   child: Container(
            //     height: 80.0,
            //     decoration: BoxDecoration(
            //       color: Colors.grey[400],
            //       borderRadius: BorderRadius.circular(5.0),
            //     ),
            //     child: Center(
            //       child: Row(
            //         mainAxisAlignment: MainAxisAlignment.center,
            //         children: <Widget>[
            //           Text(
            //             'Add receipt / item image:',
            //             style: TextStyle(color: Colors.white),
            //           ),
            //           SizedBox(width: 8.0),
            //           Icon(Icons.add, color: Colors.white),
            //         ],
            //       ),
            //     ),
            //   ),
            // ),
            SizedBox(height: 16.0),

            // Ask Gemini for description
            ElevatedButton(
              onPressed: _askGeminiForDescription,
              style: ElevatedButton.styleFrom(),
              child: Text('ask gemini for description'),
            ),
            SizedBox(height: 16.0),

            // Description
            Container(
              height: 80.0,
              padding: EdgeInsets.all(8.0),
              decoration: BoxDecoration(
                color: Colors.grey[400],
                borderRadius: BorderRadius.circular(5.0),
              ),
              alignment: Alignment.topLeft,
              child: Text(
                _description ?? 'description',
                style: TextStyle(color: Colors.white),
              ),
            ),
            SizedBox(height: 8.0),

            // Edit description
            Align(
              alignment: Alignment.bottomRight,
              child: ElevatedButton(
                onPressed: _editDescription,
                style: ElevatedButton.styleFrom(
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(5.0),
                  ),
                ),
                child: Text('edit description'),
              ),
            ),
            SizedBox(height: 32.0),

            // Submit application
            ElevatedButton(
              onPressed: _submitApplication,
              style: ElevatedButton.styleFrom(),
              child: Text('submit application'),
            ),
          ],
        ),
      ),
      bottomNavigationBar: Container(
        height: 60.0,
        color: Colors.yellow,
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: <Widget>[
            IconButton(
              icon: Icon(Icons.add, size: 30.0),
              onPressed: () {
                // Handle navigation to the '+' screen
                print('Navigate to Add screen');
              },
            ),
            IconButton(
              icon: Icon(Icons.home, size: 30.0),
              onPressed: () {
                // Handle navigation to the home screen
                print('Navigate to Home screen');
              },
            ),
            IconButton(
              icon: Icon(Icons.person, size: 30.0),
              onPressed: () {
                // Handle navigation to the profile screen
                print('Navigate to Profile screen');
              },
            ),
          ],
        ),
      ),
    );
  }
}
// //1.upload the image
// //2.enter the type
// //3.get desc from Gemini

// class UploadimageofFoundobject extends StatefulWidget {
//   const UploadimageofFoundobject({super.key});

//   @override
//   State<UploadimageofFoundobject> createState() =>
//       _UploadimageofFoundobjectState();
// }

// class _UploadimageofFoundobjectState extends State<UploadimageofFoundobject> {
//   @override
//   Widget build(BuildContext context) {
//     return Scaffold(
//       appBar: AppBar(
//         backgroundColor: Colors.black,
//         title: Row(
//           mainAxisAlignment: MainAxisAlignment.end,
//           children: [
//             //App Logo
//             const Text('App logo', style: TextStyle(color: Colors.white)),
//           ],
//         ),
//         centerTitle: false,
//       ),
//       body: Padding(
//         padding: const EdgeInsets.all(16.0),
//         child: SingleChildScrollView(
//           // Make the content scrollable
//           child: Column(
//             crossAxisAlignment: CrossAxisAlignment.stretch,
//             children: <Widget>[
//               // Add receipt/item image
//               GestureDetector(
//                 onTap: _getImage,
//                 child: Container(
//                   height: 200, // Increased height for better visibility
//                   decoration: BoxDecoration(
//                     color: Colors.grey[300],
//                     border: Border.all(color: Colors.grey),
//                     borderRadius: BorderRadius.circular(8),
//                   ),
//                   child: Center(
//                     child:
//                         _image == null
//                             ? const Text(
//                               'Add receipt / item image: +',
//                               style: TextStyle(fontSize: 16),
//                             )
//                             : Image.network(
//                               // Use Image.network
//                               _image!.path, //Display the image
//                               fit: BoxFit.cover,
//                             ),
//                   ),
//                 ),
//               ),
//               const SizedBox(height: 20),

//               // Ask Gemini for description
//               ElevatedButton(
//                 onPressed: _showGeminiDialog,
//                 style: ElevatedButton.styleFrom(
//                   backgroundColor: Colors.amber,
//                   foregroundColor: Colors.black,
//                   padding: const EdgeInsets.symmetric(vertical: 12),
//                   shape: RoundedRectangleBorder(
//                     borderRadius: BorderRadius.circular(8),
//                   ),
//                 ),
//                 child: const Text(
//                   'ask gemini for description',
//                   style: TextStyle(fontSize: 16),
//                 ),
//               ),
//               const SizedBox(height: 20),

//               // Description
//               Container(
//                 padding: const EdgeInsets.all(12),
//                 decoration: BoxDecoration(
//                   color: Colors.grey[300],
//                   border: Border.all(color: Colors.grey),
//                   borderRadius: BorderRadius.circular(8),
//                 ),
//                 child: Text("description"),
//               ),
//               const SizedBox(height: 10),
//               Align(
//                 alignment: Alignment.centerRight,
//                 child: TextButton(
//                   onPressed: () {
//                     // Implement edit description functionality
//                     setState(() {
//                       _description = ''; // Clear the description for editing
//                     });
//                   },
//                   child: const Text(
//                     'edit description',
//                     style: TextStyle(color: Colors.blue),
//                   ),
//                 ),
//               ),
//               const SizedBox(height: 30),

//               // Submit application
//               ElevatedButton(
//                 onPressed: () {
//                   // Implement submit application functionality
//                   // Show a dialog to confirm submission
//                   showDialog(
//                     context: context,
//                     builder:
//                         (context) => AlertDialog(
//                           title: const Text('Submit Application'),
//                           content: const Text(
//                             'Are you sure you want to submit your application?',
//                           ),
//                           actions: [
//                             TextButton(
//                               onPressed: () {
//                                 Navigator.of(context).pop(); // Close the dialog
//                                 // Add your submission logic here (e.g., send data to a server)
//                                 print('Application submitted!');
//                                 // Optionally, show a success message
//                                 ScaffoldMessenger.of(context).showSnackBar(
//                                   const SnackBar(
//                                     content: Text(
//                                       'Application submitted successfully!',
//                                     ),
//                                   ),
//                                 );
//                               },
//                               child: const Text('Submit'),
//                             ),
//                             TextButton(
//                               onPressed: () {
//                                 Navigator.of(context).pop(); // Close the dialog
//                               },
//                               child: const Text('Cancel'),
//                             ),
//                           ],
//                         ),
//                   );
//                 },
//                 style: ElevatedButton.styleFrom(
//                   backgroundColor: Colors.amber,
//                   foregroundColor: Colors.black,
//                   padding: const EdgeInsets.symmetric(vertical: 12),
//                   shape: RoundedRectangleBorder(
//                     borderRadius: BorderRadius.circular(8),
//                   ),
//                 ),
//                 child: const Text(
//                   'submit application',
//                   style: TextStyle(fontSize: 16),
//                 ),
//               ),
//             ],
//           ),
//         ),
//       ),
//       bottomNavigationBar: BottomNavigationBar(
//         items: const [
//           BottomNavigationBarItem(icon: Icon(Icons.add), label: '+'),
//           BottomNavigationBarItem(icon: Icon(Icons.home), label: 'Home'),
//           BottomNavigationBarItem(icon: Icon(Icons.person), label: 'Profile'),
//         ],
//       ),
//     );
//   }
// }
